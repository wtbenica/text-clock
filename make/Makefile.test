# SPDX-FileCopyrightText: 2024-2025 Wesley Benica <wesley@benica.dev>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# Testing and validation targets
# This file contains targets for running tests, validation, and CI checks

## === Testing & Validation ===

## test                Compile from TypeScript and run tests
test: node_modules/
	@echo "Running tests..."
	@command -v yarn >/dev/null 2>&1 || { echo "ERROR: yarn is required to run tests" >&2; exit 1; }
	@yarn tsc -p config/tsconfig.test.json || { echo "ERROR: TypeScript compilation failed" >&2; exit 1; }
	@yarn test || { echo "ERROR: Tests failed" >&2; exit 1; }

## lint                Run TypeScript linter
lint:
	@echo "Running linter..."
	@command -v yarn >/dev/null 2>&1 || { echo "ERROR: yarn is required to run linter" >&2; exit 1; }
	@yarn lint || { echo "ERROR: Linting failed" >&2; exit 1; }

## coverage            Run tests with coverage reporting
coverage: node_modules/
	@echo "Running tests with coverage..."
	@command -v yarn >/dev/null 2>&1 || { echo "ERROR: yarn is required to run tests" >&2; exit 1; }
	@yarn tsc -p config/tsconfig.test.json >/dev/null 2>&1 || { echo "ERROR: TypeScript compilation failed" >&2; exit 1; }
	@yarn test --coverage || { echo "ERROR: Coverage analysis failed" >&2; exit 1; }
	@find po -type f -name "*.po~" -exec rm -f {} \; >/dev/null 2>&1 || true
	@echo "Coverage report generated: coverage/lcov-report/index.html"

## validate            Run build and tests (used as the default CI-style check)
validate: lint test build
	@find po -type f -name "*.po~" -exec rm -f {} \; >/dev/null 2>&1 || true
	@echo "Validation completed successfully."

## ci-dry-run          Run validation + non-destructive release in auto mode (CI dry-run)
ci-dry-run: check-deps
	@echo "Starting CI dry-run: validate + non-destructive release"
	@$(MAKE) node_modules/ || { echo "ERROR: node_modules install failed"; exit 1; }
	@$(MAKE) validate || { echo "ERROR: validate failed"; exit 1; }
	@$(MAKE) release-dry ACCEPT_ALL=1 || { echo "ERROR: release-dry failed"; exit 1; }